events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    upstream web {
        server web:3000;
    }

    upstream backend {
        server area-backend:8080;
    }

    server {
        listen 80;
        server_name {{ DOMAIN }};

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        server_name grafana.{{ DOMAIN }};

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name {{ DOMAIN }};

        ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        location / {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://web;
            proxy_redirect off;
            proxy_buffering off;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        location /api/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://backend;
            proxy_redirect off;
            proxy_buffering off;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

#        location ~ ^/(api/auth|login|register) {
#            limit_req zone=login burst=3 nodelay;
#            proxy_pass http://web;
#            proxy_redirect off;
#            proxy_buffering off;
#        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /health {
            proxy_pass http://web;
            access_log off;
        }

        location /api/health {
            proxy_pass http://web;
            access_log off;
        }

        location /actuator/ {
            proxy_pass http://backend/actuator/;
            access_log off;
        }
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name grafana.{{ DOMAIN }};

        ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        location / {
            proxy_pass http://area-grafana:3000/;
            proxy_redirect off;
            proxy_buffering off;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        location /prometheus/ {
            auth_basic "Prometheus Access";
            auth_basic_user_file /etc/nginx/.htpasswd_prometheus;
            proxy_pass http://area-prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect /query /prometheus/query;
        }

        location /nginx_status {
            auth_basic "Nginx Status";
            auth_basic_user_file /etc/nginx/.htpasswd_prometheus;
            stub_status on;
            access_log off;
        }
    }
}